name: Java CI with Maven

on: [ push ]

<<<<<<< HEAD
permissions:
      packages: write

=======
>>>>>>> upstream/main
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/sen2vm/sen2vm-build-env:0.1.0
<<<<<<< HEAD
    env:
      MAVEN_CLI_OPTS: "-s .CI/maven-settings.xml --file pom.xml --batch-mode --update-snapshots"
    steps:
      - uses: actions/checkout@v4
      - name: Verify
        run: |
          mvn $MAVEN_CLI_OPTS install
          test -z "$SONAR_TOKEN" \
            || mvn $MAVEN_CLI_OPTS sonar:sonar \
                 -Dsonar.host.url=https://sonarcloud.io \
                 -Dsonar.login=${SONAR_TOKEN} \
                 -Dsonar.organization=${GITHUB_REPOSITORY_OWNER} \
                 -Dsonar.projectKey=${GITHUB_REPOSITORY//\//_} \
                 -Dsonar.branch.name=${CI_COMMIT_REF_NAME} \
                 -Dsonar.qualitygate.wait=true
=======
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: mvn -B -U -f pom.xml install
>>>>>>> upstream/main
      - name: Deploy
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG_NAME=${GITHUB_REF##*/}
          if [[ "$TAG_NAME" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] ; then
<<<<<<< HEAD
            PROJECT_VERSION=$(mvn $MAVEN_CLI_OPTS help:evaluate -Dexpression=project.version -q -DforceStdout)
=======
            PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
>>>>>>> upstream/main
            if [[ "$TAG_NAME" != "$PROJECT_VERSION" ]] ; then
                echo "ERROR: the tag name ($TAG_NAME) doesn't match the project version ($PROJECT_VERSION) stated in the pom.xml file"
                exit 1
            fi
<<<<<<< HEAD
            mvn $MAVEN_CLI_OPTS deploy \
                -DskipTests=true \
=======
            mvn -B -U -f pom.xml \
                -s .CI/maven-settings.xml \
                deploy -DskipTests=true \
>>>>>>> upstream/main
                -Dmaven.repository.target=${{ github.repository }}
          else
            echo "Tag '$TAG_NAME' does not follow SemVer format. No artifact released."
          fi
        env:
          MAVEN_USERNAME: ${{ secrets.actor }}
          MAVEN_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
